Create a node
CREATE (ee:Person { name: "Emil", from: "Sweden", klout: 99 })

find a node
MATCH (ee:Person) WHERE ee.name = "Emil" RETURN ee;

Create multiple nodes
CREATE (js:Person { name: "Johan", from: "Sweden", learn: "surfing" }),
(ir:Person { name: "Ian", from: "England", title: "author" }),
(rvb:Person { name: "Rik", from: "Belgium", pet: "Orval" }),
(ally:Person { name: "Allison", from: "California", hobby: "surfing" }),
(ee)-[:KNOWS {since: 2001}]->(js),(ee)-[:KNOWS {rating: 5}]->(ir),
(js)-[:KNOWS]->(ir),(js)-[:KNOWS]->(rvb),
(ir)-[:KNOWS]->(js),(ir)-[:KNOWS]->(ally),
(rvb)-[:KNOWS]->(ally)

match
MATCH clause to describe the pattern from known Nodes to found Nodes
(ee)starts the pattern with a Person (qualified by WHERE)
-[:KNOWS]-matches "KNOWS" relationships (in either direction)
(friends)will be bound to Emil's friends

MATCH (ee:Person)-[:KNOWS]-(friends)
 WHERE ee.name = "Emil" RETURN ee, friends
 
Purge
MATCH (n) DETACH DELETE n

find Everything
MATCH (n) RETURN n

